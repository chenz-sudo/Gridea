<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chenz-sudo.github.io/Gridea</id>
    <title>Chenz&apos;s blog</title>
    <updated>2020-12-02T06:06:55.413Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chenz-sudo.github.io/Gridea"/>
    <link rel="self" href="https://chenz-sudo.github.io/Gridea/atom.xml"/>
    <logo>https://chenz-sudo.github.io/Gridea/images/avatar.png</logo>
    <icon>https://chenz-sudo.github.io/Gridea/favicon.ico</icon>
    <rights>All rights reserved 2020, Chenz&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[NETCDF4&PyFVCOM的安装]]></title>
        <id>https://chenz-sudo.github.io/Gridea/post/pyfvcom-install/</id>
        <link href="https://chenz-sudo.github.io/Gridea/post/pyfvcom-install/">
        </link>
        <updated>2020-11-20T12:37:07.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>PyFVCOM is a collection of various tools and utilities which can be used to extract, analyse and plot input and output files from FVCOM as well as generate model inputs.</p>
</blockquote>
<pre><code>Github：https://github.com/pwcazenave/PyFVCOM
</code></pre>
<h1 id="step1">Step1</h1>
<p>安装openmpi</p>
<ol>
<li>下载软件包</li>
</ol>
<pre><code>https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.4.tar.gz
</code></pre>
<ol start="2">
<li>解压</li>
</ol>
<pre><code>tar -xzvf openmpi-3.1.4.tar.gz
</code></pre>
<ol start="3">
<li>安装</li>
</ol>
<pre><code>cd openmpi-3.1.4
./configure --prefix=/path to openmpi/
make
make install
</code></pre>
<ol start="4">
<li>设置环境变量</li>
</ol>
<pre><code>vi ~/.bashrc
</code></pre>
<p>    在文本末尾添加如下内容</p>
<pre><code>export OMP=/path to openmpi/
export PATH=$OMP/bin:$PATH
export LD_LIBRARY_PATH=$OMP/lib:$LD_LIBRARY_PATH
export INCLUDE=$OMP/include:$INCLUDE
</code></pre>
<p>    保存后更新环境</p>
<pre><code>source ~/.bashrc
</code></pre>
<h1 id="step-2">Step 2</h1>
<p>安装 hdf5</p>
<ol>
<li>下载软件包</li>
</ol>
<pre><code>https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.5/src/hdf5-1.10.5.tar.gz
</code></pre>
<ol start="2">
<li>解压</li>
</ol>
<pre><code>tar -xzvf hdf5-1.10.5.tar.gz
</code></pre>
<ol start="3">
<li>安装</li>
</ol>
<pre><code>cd hdf5-1.10.5
./configure --prefix=/path to hdf5/ --enable-fortran --enable-parallel CC=mpicc FC=mpif90 CXX=mpicxx
make
make install
</code></pre>
<ol start="4">
<li>设置环境</li>
</ol>
<pre><code>vi ~/.bashrc
</code></pre>
<p>    在文本末尾添加如下内容</p>
<pre><code>export HDF5=/path to hdf5/
export PATH=$HDF5/bin:$PATH
export LD_LIBRARY_PATH=$HDF5/lib:$LD_LIBRARY_PATH
export INCLUDE=$HDF5/include:$INCLUDE
</code></pre>
<p>    保存后更新环境</p>
<pre><code>source ~/.bashrc
</code></pre>
<h1 id="step-3">Step 3</h1>
<p>安装 NETCDF-C</p>
<ol>
<li>下载软件包</li>
</ol>
<pre><code>https://www.unidata.ucar.edu/software/netcdf/
</code></pre>
<ol start="2">
<li>解压</li>
</ol>
<pre><code>tar -zxvf netcdf-c-4.7.0.tar.gz
</code></pre>
<ol start="3">
<li>安装</li>
</ol>
<pre><code>cd netcdf-c-4.7.0
./configure --prefix=/path to netcdf/ LDFLAGS=-L$HDF5/lib CPPFLAGS=-I$HDF5/include CC=mpicc
make 
make install
</code></pre>
<ol start="4">
<li>设置环境</li>
</ol>
<pre><code>vi ~/.bashrc
</code></pre>
<p>    在文本末尾添加如下内容</p>
<pre><code>export NETCDF=/path to netcdf/
export PATH=$NETCDF/bin:$PATH
export LD_LIBRARY_PATH=$NETCDF/lib:$LD_LIBRARY_PATH
export INCLUDE=$NETCDF/include:$INCLUDE
</code></pre>
<p>    保存后更新环境</p>
<pre><code>source ~/.bashrc
</code></pre>
<h1 id="step-4">Step 4</h1>
<p>安装 NETCDF-Fortran</p>
<ol>
<li>下载软件包</li>
</ol>
<pre><code>https://www.unidata.ucar.edu/software/netcdf/
</code></pre>
<ol start="2">
<li>解压</li>
</ol>
<pre><code>tar -zxvf netcdf-fortran-4.4.5.tar.gz
</code></pre>
<ol start="3">
<li>安装</li>
</ol>
<pre><code>cd netcdf-fortran-4.4.5
./configure --prefix=/path to netcdf/ LDFLAGS=&quot;-L$HDF5/lib -L$NETCDF/lib&quot; CPPFLAGS=&quot;-I$HDF5/include -I$NETCDF/include&quot;  CC=mpicc FC=mpif90 F77=mpif90
make
make install
</code></pre>
<ol start="4">
<li>更新环境</li>
</ol>
<pre><code>source ~/.bashrc
</code></pre>
<ol start="5">
<li>验证安装</li>
</ol>
<pre><code>nc-config --all
</code></pre>
<p>如果对编译NETCDF时的编译器特殊要求（如intel），在CC、FC等指定。</p>
<h1 id="step-5">Step 5</h1>
<p>安装PyFVCOM</p>
<pre><code>pip install PyFVCOM
</code></pre>
<p>过程中提示缺少组件另行安装即可。<br>
或下载安装包安装</p>
<pre><code>python setup.py build
python setup.py install
</code></pre>
]]></content>
    </entry>
</feed>